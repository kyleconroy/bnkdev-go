// Code generated by riza; DO NOT EDIT.

package bnkdev

import (
	"context"
	"fmt"
)

// Cards are credit cards. Currently they're online-only but in the future
// we'll mail you physical cards too.
type Card struct {
	ID string `json:"id,omitempty"` // The card identifier.

	// The identifier for the account this card belongs to.
	AccountID string `json:"account_id,omitempty"`

	// The street address you set for the card.
	AddressLine1 string `json:"address_line1,omitempty"`

	// The card's expiry year and month in the form YYYY-MM.
	Expiry string `json:"expiry,omitempty"`

	// The name you chose for the card. This doesn't necessarily need to be
	// the cardholder name and it's not used when authorizing payments.
	Name string `json:"name,omitempty"`

	// The path that can be used in the API or your dashboard for the card.
	Path string `json:"path,omitempty"`

	// The credit card number.
	PrimaryAccountNumber string `json:"primary_account_number,omitempty"`

	// This indicates if payments can be made with the card. The possible
	// values are active, disabled, and canceled.
	Status string `json:"status,omitempty"`

	// This indicates how the card can be used. The possible values are
	// card_on_file for cards you use online, physical for cards we mail to
	// you, and apple_pay for Apple Pay cards you can load to your phone.
	// Currently, all cards are card_on_file.
	UseCase string `json:"use_case,omitempty"`

	// The three-digit verification code for the card. It's also known as the
	// Card Verification Code (CVC), the Card Verification Value (CVV), or the
	// Card Identification (CID).
	VerificationCode string `json:"verification_code,omitempty"`

	AddressZip string `json:"address_zip,omitempty"` // The ZIP code you set for the card.
}

type CreateCardRequest struct {
	AccountID string `json:"account_id,omitempty"`

	// The street address you set for the card.
	AddressLine1 string `json:"address_line1,omitempty"`

	// The name you chose for the card. This doesn't necessarily need to be
	// the cardholder name and it's not used when authorizing payments.
	Name string `json:"name,omitempty"`

	AddressZip string `json:"address_zip,omitempty"` // The ZIP code you set for the card.
}

// Returns CreateCardRequest with AccountID set to the empty string so that it's
// not included in the JSON request body.
func (r *CreateCardRequest) body() interface{} {
	if r == nil {
		return r
	}
	req := *r
	req.AccountID = ""
	return &req
}

type ListCardsRequest struct {
	AccountID string `json:"account_id,omitempty"`
}

type ListCardsResponse struct {
	Data             []Card           `json:"data,omitempty"`
	ResponseMetadata ResponseMetadata `json:"response_metadata,omitempty"`
}

func (c *Client) CreateCard(ctx context.Context, r *CreateCardRequest) (*Card, error) {
	var resp Card
	if err := c.request(ctx, "POST", fmt.Sprintf("/accounts/%s/routes/cards", r.AccountID), nil, r.body(), &resp); err != nil {
		return nil, fmt.Errorf("CreateCard: %w", err)
	}
	return &resp, nil
}

// Returns a list of agent objects that match the provided query.
func (c *Client) ListCards(ctx context.Context, r *ListCardsRequest) (*ListCardsResponse, error) {
	var resp ListCardsResponse
	if err := c.request(ctx, "GET", fmt.Sprintf("/accounts/%s/routes/cards", r.AccountID), nil, nil, &resp); err != nil {
		return nil, fmt.Errorf("ListCards: %w", err)
	}
	return &resp, nil
}
